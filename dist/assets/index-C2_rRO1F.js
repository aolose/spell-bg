(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))o(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const l of i.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&o(l)}).observe(document,{childList:!0,subtree:!0});function s(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function o(t){if(t.ep)return;t.ep=!0;const i=s(t);fetch(t.href,i)}})();const G="_flag,Name,SpellType,SpellProperties,TargetFloor,TargetRadius,SpellRoll,SpellSuccess,SpellFail,TargetConditions,ProjectileCount,Trajectories,Icon,DisplayName,Description,TooltipDamageList,TooltipAttackSave,PreviewCursor,CastTextEvent,AlternativeCastTextEvents,CycleConditions,UseCosts,DualWieldingUseCosts,SpellAnimation,DualWieldingSpellAnimation,VerbalIntent,WeaponTypes,SpellFlags,HitAnimationType,SpellAnimationIntentType,SpellSoundMagnitude,Sheathing,Using,PrepareEffect,CastEffect,DamageType,Cooldown,ExtraDescription,ExtraDescriptionParams,CastSound,SpellStyleGroup,RequirementConditions,ExplodeRadius,TooltipStatusApply,PositionEffect,DescriptionParams,RechargeValues,AreaRadius,ForkChance,MaxForkCount,ForkLevels,ForkingConditions,TooltipOnMiss,HitCosts,TooltipSpellDCAbilities,SpellContainerID,TooltipPermanentWarnings,Level,SpellSchool,TooltipUpcastDescription,TooltipUpcastDescriptionParams,MemoryCost,ContainerSpells,RootSpellID,PowerLevel,AmountOfTargets,HitEffect,MaximumTargets,PrepareSound,PrepareLoopSound,CastTargetHitDelay,TooltipOnSave,FollowUpOriginalSpell,ConcentrationSpellID,Angle,CombatAIOverrideSpell,TargetCeiling,AddRangeFromAbility,ProjectileTerrainOffset,SpellActionType,SpellCategory,SpellJumpType,MinJumpDistance,Requirements,TargetEffect,DeathType,AIFlags,TargetProjectiles,ProjectileDelay,Height,Template,ProjectileType,Distribution,HitRadius,MovementSpeed,PreviewEffect,HitExtension,StopAtFirstContact,OnlyHit1Target,TargetSound,VocalComponentSound,CinematicArenaFlags,RitualCosts,InterruptPrototype,Autocast,RequirementEvents,SpellEffect,InstrumentComponentPrepareSound,InstrumentComponentLoopingSound,InstrumentComponentCastSound,InstrumentComponentImpactSound,SpellAnimationType,BeamEffect,AoEConditions,SteerSpeedMultipler,LineOfSightFlags,DisappearEffect,HighlightConditions,MaximumTotalTargetHP,SourceLimbIndex,Acceleration,OriginSpellProperties,OriginTargetConditions,TeleportSelf,TeleportSurface,ThrowableSpellRoll,ThrowableSpellSuccess,ThrowableTargetConditions,SurfaceType,SurfaceLifetime,SurfaceGrowStep,SurfaceGrowInterval,Shape,FrontOffset,Range,Base,ImpactEffect,StrikeCount,SingleSource,ForceTarget,MaxDistance,ItemWall,ItemWallStatus,TargetHitEffect,PreviewStrikeHits,Shuffle,ShortDescriptionParams,IgnoreTeleport,OriginSpellRoll,OriginSpellSuccess,OriginSpellFail,ThrowOrigin,ThrowableSpellProperties,Lifetime,SurfaceRadius".split(",");let x="";function J(){Y.textContent=`${u.length}`}function Z(e){["TooltipUpcastDescriptionParams","DescriptionParams"].forEach(n=>{if(!e[n])return;const s=n.replace(/Params$/,"");if(!e[s])return delete e[n];[].concat(e[n]).forEach((o,t)=>e[s]=e[s].replace(`[${t+1}]`,`${o}`))})}const K=16;let Q=_ok;const X=["Projectile","ProjectileStrike","Rush","Shout","Target","Teleportation","Throw","Zone","Wall"],p={};let f=0;const H={};_ok=null;const b=170,D=330,h=[],u=[],$={},L=document.getElementById("z"),y=document.querySelector(".ri"),Y=document.getElementById("tt"),P=document.getElementById("b"),ee=document.getElementById("c"),w=document.getElementById("e"),E=document.getElementById("cp"),T=document.getElementById("v");let m=Math.max(1,Math.floor((y.offsetWidth-20)/D));const te=T.style;function R(){const e=Math.ceil(u.length/m);te.height=b*e+20+"px"}const N=e=>{const n=/^\/(.+?)\/([giy]*$)/.exec(e);if(n)try{return new RegExp(n[1],(n[2]||"").replace("i","")+"i")}catch{}};function ne(e,n){const s=p[n],o=s.Name,t=e==="+"?"AddSpell":"RemoveSpell";E.value=`${t}(GetHostCharacter(),'${o}')`,E.select(),E.setSelectionRange(0,1e3),clearTimeout(s._.t),navigator.clipboard.writeText(E.value).then(()=>{const i=l=>{const r=document.getElementById(n).querySelector(".cp span");r&&(r.innerText=l)};i(`${t.replace("S"," S")} Copied!`),s._.t=setTimeout(i,3e3,"")})}function k(){u.length=0;const{t:e,k:n,l:s}=$;h.forEach((o,t)=>{const i=(l,r)=>{const a=N(l);if(a)return a.test(r);if(/.\*|\*./.test(l))return new RegExp(l.replace(/\*/g,".*"),"ig").test(r);if(l==="-"){if(r)return}else if(l==="*"){if(!r)return}else if(/^>\d+$/.test(l)){const c=+l.slice(1);if(!isNaN(c)){let d=0;if([].concat(r).forEach(g=>{if(/^\d+$/.test(g))+g>=c&&(d=1);else{const S=/DealDamage\((\d+)d(\d+)\+?(\d*),.*?\)/,[,v,C,I]=S.exec(g)||[];C&&v*C+(+I||0)>=c&&(d=1)}}),!d)return}}else if((r+"").toLowerCase().indexOf((l+"").toLowerCase())===-1)return;return 1};if(!e||e===o.SpellType){if(n&&s){if(!o.hasOwnProperty(n)){if(s==="*")return;if(s==="-")return u.push(t)}let l=0;for(const[r,a]of Object.entries(o)){const c=N(n);if((c!=null&&c.test(r)||r.toLowerCase()===n.toLowerCase()||/\*/.test(n)&&new RegExp(n.replace(/\*/g,".*"),"gi").test(r))&&i(s,a)){l=1;break}}if(!l)return}u.push(t)}}),u.sort((o,t)=>{o=h[o],t=h[t];const i=o.lv,l=t.lv;return i===l?o._nm>t._nm?1:-1:i>l?1:-1}),R(),J(),f++}function F(e){if(!e)return;e._||(Object.keys(e).forEach(l=>{e[l]||delete e[l]}),e._={});const{Using:n,_flag:s=""}=e,o=n&&(p[n]||p[s+n]);if(o&&o!==e){const l=F(o);l&&Object.keys(l).forEach(r=>{e.hasOwnProperty(r)||(e[r]=l[r],e._[r]=1)})}e.nm=e.Name.replace(e.SpellType+"_","").replace(/_/g," ").replace(/([a-z0-9])([A-Z])/g,"$1 $2"),e._nm=e.nm.toLowerCase(),e.lv=+e.Level||99,e.ico=j(e.Icon);const{SpellProperties:t,SpellSuccess:i}=e;return typeof t=="string"&&(e.SpellProperties=[t]),typeof i=="string"&&(e.SpellSuccess=[i]),e}function j(e){const n=H[e];if(n){const[s,o,t]=n;return`background-position:${s}% ${t}%;background-image:url(${o}.webp)`}return"background-size:cover"}window.ok=()=>{const e=100*++Q/K;L.style.width=e+"%",e===100&&(L.style.opacity="0")};window.loadIcon=e=>{const n=e.length/4,[s,o]=[e.slice(0,n),e.slice(n)];s.forEach((t,i)=>{H[t]=o.slice(i*3,(i+1)*3).map(Number)}),Object.values(p).forEach(t=>t.ico=j(t.Icon)),T.querySelectorAll("i").forEach(t=>{const i=t.parentElement.id,l=p[i];t.style=l.ico})};window.loadSpell=e=>{e.forEach(n=>{const s=n.length/2,[o,t]=[n.slice(0,s),n.slice(s)],i={};o.forEach((r,a)=>{i[G[r]]=t[a]});const l=(i._flag||"")+i.Name;p[l]=i,h.push(i)}),Object.values(p).forEach(n=>{F(n),Z(n)}),k()};function oe(e){x=e.Name,f++;const n=["SpellType","UseCosts","Icon","Level","ExtraDescription","Description","DisplayName","Using","Name"],s=Object.keys(e).filter(t=>["ico","nm","_nm","lv"].indexOf(t)===-1);s.sort((t,i)=>{const l=n.indexOf(t),r=n.indexOf(i);return l===r?t>i?1:-1:r-l});let o="";return s.forEach(t=>{if(t==="-")return;const i=e[t];let l;l=t!=="_flag"&&(!isNaN(i)||i!=null&&i.length)?Array.isArray(i)?`<ul>${i.filter(Boolean).map(a=>`<li>${a}</li>`).join("")}</ul>`:`<span>${i}</span>`:"";const r=e._&&e._[t]?"_":"";l&&(o+=`<div>
<label class="${r}">${t}</label>${l}
</div>`)}),o}T.onclick=({target:e})=>{const n=T.children,s=[].find.call(n,t=>t===n||t.contains(e)),o=s&&s.id;if(e.tagName[0]==="B"){ne(e.textContent,o);return}o&&(P.className="s",w.className="s",p[o].Name!==x&&(P.innerHTML=oe(p[o])))};w.onclick=function(){x="",f++,P.className="",w.className="",P.innerHTML=`<pre>
Content based on Patch 7.
The filter supports regular expressions
and is case insensitive.

Name:
         The Property name of spell's data.
         'spell*' means start width spell.
         Or, you can type /^spell/.
 Value:
         The Property Value of spell's data .
         '-' means empty.
         '*' means not empty.
         '>5' means equal or bigger than 5.
        
 e.g
     No level limit spells:
     Name: level   Value: -
     Honour spells:
     Name: _flag   Value: *
     Spells Damage > 500:
     Name: spell*   Value: >500
 </pre><a href='https://github.com/aolose/spell-bg' target='_blank'>
 <img alt='github' src='https://github.githubassets.com/favicons/favicon.svg'/></a>`};w.onclick(null);const ie=e=>{const n=document.createElement("div");return n.innerHTML=e,n.children[0]},B=[],U=(e,n)=>{$.t=n,B.forEach(s=>s.act(e))};[""].concat(X).forEach((e,n)=>{const s=e||"ALL",o=ie(`
<div role="tab" aria-selected="true" aria-controls="spell-type" >
    ${s.toUpperCase()}
</div>`);o.onclick=()=>{U(s,e)},o.act=t=>{o.className=t===s?"act":""},B.push(o),ee.appendChild(o)});const W=(e,n,s=o=>o)=>{const o=document.getElementById(e);let t=-1;o.oninput=o.onchange=o.onpaste=o.onblur=function(){clearTimeout(t),t=setTimeout(()=>{$[n]=s(o.value.replace(/^\s+|\s+$/,"")),f++},200)}};W("v0","k",e=>e&&e.replace(e[0],e[0].toUpperCase()));W("v2","l");U("ALL","");let _,A,M="";const q=()=>{requestAnimationFrame(q);const e=JSON.stringify($);if(M!==e&&(M=e,k()),f!==_){_=f=0;{const n=m*A,s=u.length,o=Math.floor(y.scrollTop/b)*m,t=Math.max(0,o-n),i=Math.min(s,o+2*n);let l="";for(let r=t;r<i;r++){const{nm:a,ico:c,DisplayName:d,Description:g="",Name:S,_flag:v="",Level:C,SpellType:I,SpellProperties:V=[],SpellSuccess:z=[]}=h[u[r]];l+=`
<div class="c${x===S?" a":""}" 
     role="listitem" 
     id="${v+S}" 
     style="left:${r%m*D}px;top:${Math.floor(r/m)*b}px"
>
    <span title="${v}" hidden>H</span>
    <i style="${c}" role="img" aria-label="icon of the spell ${S}" title="${d||g}"></i>
    <span class="lv">level ${C||"-"}</span>
    <span class="tp">${I}</span>
    <span class="cp"><span></span><button>+</button><button>-</button></span>
    <div class="l">
        <label>${d||a}</label>
        <div class="u">
            <div class="w">
                <p>${g}</p>
                <ul class="po">${V.map(O=>"<li>"+O+"</li>").join("")}</ul>
                <ul>${z.map(O=>"<li>"+O+"</li>").join("")}</ul>
            </div>
        </div>
    </div>
</div>`}T.innerHTML=l}}};y.onscroll=()=>f++;window.onresize=()=>{let e=Math.max(1,Math.floor((y.offsetWidth-20)/D)),n=Math.ceil((y.offsetHeight-20)/b);(m!==e||A!==n)&&(m=e,A=n,f++,R())};onresize(null);q();_icons&&(loadIcon(_icons),_icons=null);_spells&&(_spells.forEach(loadSpell),_spells=null);
